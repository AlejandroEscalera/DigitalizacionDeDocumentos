@page "/BusquedaPorExpediente"
@page "/BusquedaPorExpediente/{RecordId}"
@using ConsultaDeImagenes.Data;
@using ConsultaDeImagenes.Services;
@inject MyDataService myDataService
@inject NavigationManager NavigationManager

<h3>Búsqueda por expediente</h3>
<section>
    Escriba el número de expediente a buscar :
    <input type="text" id="txtNumeroExpediente" @bind-value="searchKey" />

    <button id="btnBuscar" @onclick="Search">Busqueda por expediente</button>
</section>

@if (searchResults != null && muestraRegistros)
{
    <div>
        <h3>Resultados:</h3>
        <ul>
            @foreach (var result in searchResults)
            {
                <li>
                    <a href="#" @onclick="() => ShowDetail(result.Id)">@result.Name</a>
                </li>
            }
        </ul>
    </div>
}

@if (selectedResult != null && !muestraRegistros)
{
    <div>
        <h3>Detalle:</h3>
        <p>@selectedResult.Description</p>
    </div>
}

@code {
    [Parameter]
    public int RecordId { get; set; }

    private string searchKey;
    private bool muestraRegistros;
    private List<MyRecord> searchResults;
    private MyRecord selectedResult;

    private void Search()
    {
        // Realiza la búsqueda utilizando la clave de búsqueda ingresada por el usuario
        searchResults = myDataService.Search(searchKey);
        muestraRegistros = true;
    }

    private void ShowDetail(int recordId)
    {
        // Busca el registro seleccionado por el usuario utilizando su ID
        selectedResult = myDataService.GetRecordById(recordId);
        if (muestraRegistros) {
            muestraRegistros = false;
            NavigationManager.NavigateTo(string.Format("MuestraDetalle/{0}", recordId));
        }

    }

    protected override void OnInitialized()
    {
        int recordId = this.RecordId;
        if (recordId != 0)
        {
            ShowDetail(recordId);
        }
        /*
        if (RecordId > 1)
            ShowDetail(RecordId);
            */
    }
    
}
